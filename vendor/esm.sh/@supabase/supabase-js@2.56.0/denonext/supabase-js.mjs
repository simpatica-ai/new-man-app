/* esm.sh - @supabase/supabase-js@2.56.0 */
import __Process$ from "node:process";
import{FunctionsClient as D}from"/@supabase/functions-js@2.4.5/denonext/functions-js.mjs";import{PostgrestClient as I}from"/@supabase/postgrest-js@1.21.3/denonext/postgrest-js.mjs";import{RealtimeClient as N}from"/@supabase/realtime-js@2.15.1/denonext/realtime-js.mjs";import{StorageClient as R}from"/@supabase/storage-js@^2.10.4?target=denonext";var g="2.56.0";var f="";typeof Deno<"u"?f="deno":typeof document<"u"?f="web":typeof navigator<"u"&&navigator.product==="ReactNative"?f="react-native":f="node";var E={"X-Client-Info":`supabase-js-${f}/${g}`},_={headers:E},b={schema:"public"},x={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},T={};import S,{Headers as U}from"/@supabase/node-fetch@2.6.15/denonext/node-fetch.mjs";var y=function(r,e,t,s){function l(o){return o instanceof t?o:new t(function(a){a(o)})}return new(t||(t=Promise))(function(o,a){function h(n){try{c(s.next(n))}catch(i){a(i)}}function u(n){try{c(s.throw(n))}catch(i){a(i)}}function c(n){n.done?o(n.value):l(n.value).then(h,u)}c((s=s.apply(r,e||[])).next())})},L=r=>{let e;return r?e=r:typeof fetch>"u"?e=S:e=fetch,(...t)=>e(...t)},k=()=>typeof Headers>"u"?U:Headers,v=(r,e,t)=>{let s=L(t),l=k();return(o,a)=>y(void 0,void 0,void 0,function*(){var h;let u=(h=yield e())!==null&&h!==void 0?h:r,c=new l(a?.headers);return c.has("apikey")||c.set("apikey",r),c.has("Authorization")||c.set("Authorization",`Bearer ${u}`),s(o,Object.assign(Object.assign({},a),{headers:c}))})};var j=function(r,e,t,s){function l(o){return o instanceof t?o:new t(function(a){a(o)})}return new(t||(t=Promise))(function(o,a){function h(n){try{c(s.next(n))}catch(i){a(i)}}function u(n){try{c(s.throw(n))}catch(i){a(i)}}function c(n){n.done?o(n.value):l(n.value).then(h,u)}c((s=s.apply(r,e||[])).next())})};function O(r){return r.endsWith("/")?r:r+"/"}function w(r,e){var t,s;let{db:l,auth:o,realtime:a,global:h}=r,{db:u,auth:c,realtime:n,global:i}=e,p={db:Object.assign(Object.assign({},u),l),auth:Object.assign(Object.assign({},c),o),realtime:Object.assign(Object.assign({},n),a),storage:{},global:Object.assign(Object.assign(Object.assign({},i),h),{headers:Object.assign(Object.assign({},(t=i?.headers)!==null&&t!==void 0?t:{}),(s=h?.headers)!==null&&s!==void 0?s:{})}),accessToken:()=>j(this,void 0,void 0,function*(){return""})};return r.accessToken?p.accessToken=r.accessToken:delete p.accessToken,p}import{AuthClient as F}from"/@supabase/auth-js@2.71.1/denonext/auth-js.mjs";var m=class extends F{constructor(e){super(e)}};var C=function(r,e,t,s){function l(o){return o instanceof t?o:new t(function(a){a(o)})}return new(t||(t=Promise))(function(o,a){function h(n){try{c(s.next(n))}catch(i){a(i)}}function u(n){try{c(s.throw(n))}catch(i){a(i)}}function c(n){n.done?o(n.value):l(n.value).then(h,u)}c((s=s.apply(r,e||[])).next())})},d=class{constructor(e,t,s){var l,o,a;if(this.supabaseUrl=e,this.supabaseKey=t,!e)throw new Error("supabaseUrl is required.");if(!t)throw new Error("supabaseKey is required.");let h=O(e),u=new URL(h);this.realtimeUrl=new URL("realtime/v1",u),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",u),this.storageUrl=new URL("storage/v1",u),this.functionsUrl=new URL("functions/v1",u);let c=`sb-${u.hostname.split(".")[0]}-auth-token`,n={db:b,realtime:T,auth:Object.assign(Object.assign({},x),{storageKey:c}),global:_},i=w(s??{},n);this.storageKey=(l=i.auth.storageKey)!==null&&l!==void 0?l:"",this.headers=(o=i.global.headers)!==null&&o!==void 0?o:{},i.accessToken?(this.accessToken=i.accessToken,this.auth=new Proxy({},{get:(p,A)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(A)} is not possible`)}})):this.auth=this._initSupabaseAuthClient((a=i.auth)!==null&&a!==void 0?a:{},this.headers,i.global.fetch),this.fetch=v(t,this._getAccessToken.bind(this),i.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},i.realtime)),this.rest=new I(new URL("rest/v1",u).href,{headers:this.headers,schema:i.db.schema,fetch:this.fetch}),this.storage=new R(this.storageUrl.href,this.headers,this.fetch,s?.storage),i.accessToken||this._listenForAuthEvents()}get functions(){return new D(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,t={},s={}){return this.rest.rpc(e,t,s)}channel(e,t={config:{}}){return this.realtime.channel(e,t)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,t;return C(this,void 0,void 0,function*(){if(this.accessToken)return yield this.accessToken();let{data:s}=yield this.auth.getSession();return(t=(e=s.session)===null||e===void 0?void 0:e.access_token)!==null&&t!==void 0?t:this.supabaseKey})}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:l,storageKey:o,flowType:a,lock:h,debug:u},c,n){let i={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new m({url:this.authUrl.href,headers:Object.assign(Object.assign({},i),c),storageKey:o,autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:l,flowType:a,lock:h,debug:u,fetch:n,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new N(this.realtimeUrl.href,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},e?.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((t,s)=>{this._handleTokenChanged(t,"CLIENT",s?.access_token)})}_handleTokenChanged(e,t,s){(e==="TOKEN_REFRESHED"||e==="SIGNED_IN")&&this.changedAccessToken!==s?this.changedAccessToken=s:e==="SIGNED_OUT"&&(this.realtime.setAuth(),t=="STORAGE"&&this.auth.signOut(),this.changedAccessToken=void 0)}};export*from"/@supabase/auth-js@2.71.1/denonext/auth-js.mjs";import{PostgrestError as ae}from"/@supabase/postgrest-js@1.21.3/denonext/postgrest-js.mjs";import{FunctionsHttpError as he,FunctionsFetchError as ue,FunctionsRelayError as le,FunctionsError as de,FunctionRegion as fe}from"/@supabase/functions-js@2.4.5/denonext/functions-js.mjs";export*from"/@supabase/realtime-js@2.15.1/denonext/realtime-js.mjs";var ne=(r,e,t)=>new d(r,e,t);function H(){if(typeof globalThis<"u"||typeof __Process$>"u")return!1;let r=__Process$.version;if(r==null)return!1;let e=r.match(/^v(\d+)\./);return e?parseInt(e[1],10)<=18:!1}H()&&console.warn("\u26A0\uFE0F  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. Please upgrade to Node.js 20 or later. For more information, visit: https://github.com/orgs/supabase/discussions/37217");export{fe as FunctionRegion,de as FunctionsError,ue as FunctionsFetchError,he as FunctionsHttpError,le as FunctionsRelayError,ae as PostgrestError,d as SupabaseClient,ne as createClient};
//# sourceMappingURL=supabase-js.mjs.map